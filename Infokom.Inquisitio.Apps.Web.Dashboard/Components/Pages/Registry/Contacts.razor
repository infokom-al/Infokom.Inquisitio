@page "/Registry/Contacts"

@inherits Page<RegistryDbContext>

<div class="container">
	<Card>
		<CardHeader>
			<div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 row-cols-xxl-5 g-2">
				<div class="col">
					<div class="form-floating">
						<InputText class="form-control" @bind-Value="Input.GivenName" />
						<label>Emri</label>
					</div>
				</div>

				<div class="col">
					<div class="form-floating">
						<InputText class="form-control" @bind-Value="Input.FamilyName" />
						<label>Mbiemri</label>
					</div>
				</div>

				<div class="col">
					<div class="form-floating">
						<InputText class="form-control" @bind-Value="Input.FatherName" />
						<label>Atesia</label>
					</div>
				</div>

				<div class="col">
					<div class="form-floating">
						<DateInput TValue="DateOnly?" class="form-control" @bind-Value="Input.BirthDate" />
						<label>Datelindja</label>
					</div>
				</div>
			</div>
			<hr />
			<div class="d-grid d-lg-block gap-2 justify-content-end">
				<Button Type="ButtonType.Button" Color="ButtonColor.Primary" @onclick="Search"> Kerko </Button>
				<Button Type="ButtonType.Button" Color="ButtonColor.Danger" @onclick="Clear"> Anullo </Button>
			</div>
		</CardHeader>
		<CardBody>

			<Grid @ref="Grid" Class="table table-hover table-bordered table-striped" AllowFiltering="false" AllowPaging="true" PageSizeSelectorVisible="true" AllowSorting="true"
				 TItem="Contact"
				 DataProvider="GridDataProvider">

				<GridColumns>
					<GridColumn TItem="Contact" HeaderText="NISH">
						@context.Code
					</GridColumn>

					<GridColumn TItem="Contact" HeaderText="Emri">
						@context.GivenName
					</GridColumn>
					
					<GridColumn TItem="Contact" HeaderText="Mbiemri">
						@context.FamilyName
					</GridColumn>

					<GridColumn TItem="Contact" HeaderText="Atesia">
						@context.FatherName
					</GridColumn>

					<GridColumn TItem="Contact" HeaderText="Datelindja">
						@context.BirthDate
					</GridColumn>


					<GridColumn TItem="Contact" HeaderText="Telefon">
						<dl>						
						@foreach(var x in context.Phones)
						{
							<dd>@x</dd>
						}
						</dl>
					</GridColumn>
				</GridColumns>

			</Grid>
		</CardBody>
	</Card>
</div>

@code {
	private ContactSpecification Input { get; set; }

	private IQueryable<Contact> Data { get; set; }

	private Grid<Contact> Grid { get; set; }


	protected override async Task OnInitializedAsync()
	{
		this.Input = new ();

		await base.OnInitializedAsync();
	}

	protected async Task Search()
	{
		this.Data = this.Context.Contacts.Where(this.Input.ToExpression())
			.OrderBy(x => x.GivenName)
			.ThenBy(x => x.FamilyName)
			.ThenBy(x => x.FatherName);

		await this.Grid.RefreshDataAsync();
	}

	protected async Task Clear()
	{
		this.Input = new ();

		this.Data = null;

		await this.Grid.RefreshDataAsync();
	}



	protected async Task<GridDataProviderResult<Contact>> GridDataProvider(GridDataProviderRequest<Contact> request)
	{
		if (this.Data == null)
			return new () { Data = Enumerable.Empty<Contact>(), TotalCount = 0 };

		return await request.ApplyToAsync(this.Data);
	}
}
