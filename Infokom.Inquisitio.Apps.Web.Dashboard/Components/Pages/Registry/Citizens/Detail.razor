@if (Citizen is not null)
{
	<Card>
		<CardBody>
			<div class="row">
				<div class="col-4">
					<div class="form-floating mb-2">
						<InputText class="form-control fw-bold" readonly @bind-Value="Citizen.Code" />
						<label>Nr. Personal</label>
					</div>
				</div>
			</div>
			<hr />
			<div class="row">
				<div class="col-4">
					<div class="form-floating mb-2">
						<InputText class="form-control fw-bold" readonly @bind-Value="Citizen.GivenName" />
						<label>Emri</label>
					</div>
				</div>
				<div class="col-4">
					<div class="form-floating mb-2">
						<InputText class="form-control fw-bold" readonly @bind-Value="Citizen.FamilyName" />
						<label>Mbiemri</label>
					</div>
				</div>
				<div class="col-4">
					<div class="form-floating mb-2">
						<InputText class="form-control fw-bold" readonly @bind-Value="Citizen.FatherName" />
						<label>Atesia</label>
					</div>
				</div>

				<div class="col-4 offset-8">
					<div class="form-floating mb-2">
						<InputText class="form-control fw-bold" readonly @bind-Value="Citizen.MotherName" />
						<label>Amesia</label>
					</div>
				</div>
			</div>
			<hr />
			<div class="row">
				<div class="col-4">
					<div class="form-floating mb-2">
						<DateInput class="form-control fw-bold" readonly @bind-Value="Citizen.BirthDate" />
						<label>Datelindja</label>
					</div>
				</div>
				<div class="col-8">
					<div class="form-floating mb-2">
						<InputText class="form-control fw-bold" readonly @bind-Value="Citizen.BirthPlace" />
						<label>Vendlindja</label>
					</div>
				</div>

				<div class="col-4">
					<div class="form-floating mb-2">
						<input type="text" class="form-control fw-bold" readonly value="@Citizen.Gender.GetDisplayName()" />
						<label>Gjinia</label>
					</div>
				</div>


				<div class="col-4 offset-4">
					<div class="form-floating mb-2">
						<InputText class="form-control fw-bold" readonly @bind-Value="Citizen.Nationality" />
						<label>Shtetesia</label>
					</div>
				</div>

			</div>

			<hr />
			<div class="row">

				<div class="col-4">
					<div class="form-floating mb-2">
						<InputText class="form-control fw-bold" readonly @bind-Value="Citizen.District" />
						<label>Qyteti</label>
					</div>
				</div>
				<div class="col-4 offset-4">
					<div class="form-floating mb-2">
						<InputText class="form-control fw-bold" readonly @bind-Value="Citizen.Register" />
						<label>Regsjistri</label>
					</div>
				</div>

				<div class="col-12">
					<div class="form-floating mb-2">
						<InputText class="form-control fw-bold" readonly @bind-Value="Citizen.Address" />
						<label>Adresa</label>
					</div>
				</div>

			</div>

			<hr />

			<div class="row">
				<div class="col-4">
					<div class="form-floating mb-2">

						<input class="form-control fw-bold" readonly type="text" value="@Citizen.Marital.GetDisplayName()" />
						<label>Gjendja Civile</label>
					</div>
				</div>
				@if (Citizen.Consorts.FirstOrDefault() is Citizen.Consort consort)
				{
					<div class="col-4">
						<div class="form-floating mb-2">

							<input class="form-control fw-bold" readonly type="text" value="@consort.GivenName" />
							<label>Emer Bashkeshorti</label>
						</div>
					</div>
					<div class="col-4">
						<div class="form-floating mb-2">

							<input class="form-control fw-bold" readonly type="text" value="@consort.FamilyName" />
							<label>Emer Bashkeshorti</label>
						</div>
					</div>
					<div class="col-4 offset-8">
						<div class="form-floating mb-2">

							<input class="form-control fw-bold" readonly type="text" value="@consort.MaidenName" />
							<label>Mbiemer Para Martese</label>
						</div>
					</div>
				}
			</div>


		</CardBody>
		<CardFooter>
			<div class="d-flex gap-2 justify-content-end">
				<Button Type="ButtonType.Button" Color="ButtonColor.Primary" Outline="true" @onclick="() => pdfModal.ShowAsync()">
					<Icon Name="IconName.FilePdfFill" Color="IconColor.Danger"></Icon>
				</Button>

				<Button Type="ButtonType.Button" Color="ButtonColor.Primary" Outline="true">
					<Icon Name="IconName.PrinterFill" Color="IconColor.Dark"></Icon>
				</Button>
			</div>
		</CardFooter>

	</Card>
}

<Modal @ref="pdfModal" Fullscreen="ModalFullscreen.Always" >
	
	<BodyTemplate>
		<PdfViewer Class="mb-3"
				 Url="https://raw.githubusercontent.com/mozilla/pdf.js/ba2edeae/web/compressed.tracemonkey-pldi-09.pdf"
				 OnDocumentLoaded="OnDocumentLoaded"
				 OnPageChanged="OnPageChanged" />
	</BodyTemplate>
</Modal>

@code {

	private Modal consortsModal = default;
	private Modal pdfModal = default;

	[Parameter]
	public long CitizenId { get; set; }

	[Parameter]
	public Citizen Citizen { get; set; }




	private async Task<GridDataProviderResult<Citizen.Consort>> ConsortGridDataProvider(GridDataProviderRequest<Citizen.Consort> request)
	{
		
		return await Task.FromResult(request.ApplyTo(this.Citizen.Consorts));
	}


	private string eventLog { get; set; } = $"Last event: ..., CurrentPage: 0, TotalPages: 0";

	private async Task OnDocumentLoaded(PdfViewerEventArgs args)
					=> eventLog = $"Last event: OnDocumentLoaded, CurrentPage: {args.CurrentPage}, TotalPages: {args.TotalPages}";

	private async Task OnPageChanged(PdfViewerEventArgs args)
					=> eventLog = $"Last event: OnPageChanged, CurrentPage: {args.CurrentPage}, TotalPages: {args.TotalPages}";
}
